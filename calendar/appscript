function getDataFromSheet() {
  var resultSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Calender');
  var dataRange = resultSheet.getDataRange();
  var values = dataRange.getValues();
 
  var jsonData = [];
  for (var i = 1; i < values.length; i++) {
    var rowData = {
      CalenderID: values[i][1],
      Option2: values[i][2],
      Date: values[i][3],
      Email: values[i][4]
    };
    jsonData.push(rowData);
  }
 
  return jsonData;
}
 
function handleGetRequest() {
  var data = getDataFromSheet();
  var response = {
    status: "success",
    data: data
  };
  return ContentService.createTextOutput(JSON.stringify(response)).setMimeType(ContentService.MimeType.JSON);
}
 
function doGet() {
  return handleGetRequest();
}
 
 
function doPost(e) {
  if (!e || !e.parameter || e.parameter.action !== 'alluser') {
    return ContentService.createTextOutput("Error: Invalid parameter. Expected 'action=alluser'.");
  }
  if (!e || !e.postData || !e.postData.contents) {
    return ContentService.createTextOutput("Error: Missing or invalid request body.");
  }
  var jsonString = e.postData.contents;
  try {
    var jsonData = JSON.parse(jsonString);
    if (!jsonData.answers || !Array.isArray(jsonData.answers)) {
      return ContentService.createTextOutput("Error: Invalid JSON data. 'answers' key should contain an array.");
    }
    var resultSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Calender');
 
    var dataRange = resultSheet.getRange('D2:D' + resultSheet.getLastRow()).getValues();
   
    // Check for duplicate entry
    for (var i = 0; i < dataRange.length; i++) {
      if (dataRange[i][0] == jsonData.answers[0].option2) {
           for (var i = 0; i < dataRange.length; i++) {
      if (dataRange[i][0] == jsonData.answers[0].option2) {
        MailApp.sendEmail({
          to: jsonData.email || null,
          subject: "Duplicate Entry Attempted",
          body: "You attempted to enter a duplicate entry for option2.",
        });
        return ContentService.createTextOutput("Error: Duplicate entry in 'option2'.");
      }
    }
        return ContentService.createTextOutput("Error: Duplicate entry in 'option2'.");
      }
    }
 
    var lastRow = resultSheet.getLastRow();
    var startId = lastRow === 1 ? 1 : parseInt(resultSheet.getRange(lastRow, 1).getValue()) + 1;
    var rowData = [startId];
 
    jsonData.answers.forEach(function(answer) {
      rowData.push(
        answer.questionId,
        answer.option1 || null,
        answer.option2 || null
      );
    });
 
    rowData.push(jsonData.email || null);
    resultSheet.appendRow(rowData);
 
    return ContentService.createTextOutput("Recorded Successfully.").setMimeType(ContentService.MimeType.JSON);  
  } catch (error) {
    Logger.log("Error parsing JSON: " + error);
    return ContentService.createTextOutput(error);
  }
}